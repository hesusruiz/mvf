name: fwssikit
services:
  redtmon:
    build: .
    restart: unless-stopped
    container_name: "fwssikit"

    # Expose both ports so automatic certificate provisioning works
    # But the only one working is the 443, as requests to 80 will be redirected to the 443
    ports:
      - "7000:7000"
      - "7001:7001"
      - "7002:7002"
      - "7003:7003"
      - "7004:7004"
    volumes:
      - .:/app

  caddy:
    image: caddy
    restart: unless-stopped
    container_name: "caddy"

    # Expose both ports so automatic certificate provisioning works
    # But the only one working is the 443, as requests to 80 will be redirected to the 443
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config

# Caddy requires write access to two locations: a data directory, and a configuration directory.
# While it's not necessary to persist the files stored in the configuration directory, it can be convenient.
# However, it's very important to persist the data directory.
# Caddy stores there TLS certificates, private keys, OCSP staples, and other necessary information.
# Defining the data volume as external makes sure 'docker compose down' does not delete the volume.
# You may need to create it manually using docker 'volume create caddy_data'.
volumes:
  caddy_data:
  caddy_config:
